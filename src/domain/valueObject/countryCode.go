package tkValueObject

import (
	"errors"
	"slices"
	"strings"

	tkVoUtil "github.com/goinfinite/tk/src/domain/valueObject/util"
)

type CountryCode string

var AvailableCountryCodes = []CountryCode{
	"AF", "AL", "DZ", "AD", "AO", "AG", "AR", "AM", "AU", "AT", "AZ", "BS", "BH", "BD",
	"BB", "BY", "BE", "BZ", "BJ", "BT", "BO", "BA", "BW", "BR", "BN", "BG", "BF", "BI",
	"CV", "KH", "CM", "CA", "TD", "CL", "CN", "CO", "CR", "CI", "HR", "CU", "CY", "CZ",
	"CD", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "SZ", "ET", "FJ",
	"FI", "FR", "GA", "GM", "GE", "DE", "GH", "GR", "GD", "GN", "GW", "GY", "HT", "HN",
	"HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IL", "IT", "JM", "JP", "JO", "KZ", "KE",
	"KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MG",
	"MW", "MY", "ML", "MT", "MR", "MU", "MX", "MD", "MC", "MN", "ME", "MA", "MZ", "MM",
	"NA", "NP", "NL", "NZ", "NI", "NE", "NG", "MK", "NO", "OM", "PK", "PA", "PG", "PY",
	"PE", "PH", "PL", "PT", "QA", "RO", "RU", "RW", "KN", "VC", "WS", "SM", "ST", "SA",
	"SN", "RS", "SC", "SL", "SG", "SK", "SI", "SB", "SO", "ZA", "SS", "ES", "LK", "SD",
	"SR", "SE", "CH", "SY", "TJ", "TZ", "TH", "TL", "TG", "TO", "TT", "TN", "TR", "TM",
	"UG", "UA", "GB", "US", "UY", "UZ", "VU", "VA", "VE", "VN", "YE", "ZM", "ZW",
}

func NewCountryCode(value any) (countryCode CountryCode, err error) {
	stringValue, err := tkVoUtil.InterfaceToString(value)
	if err != nil {
		return countryCode, errors.New("CountryCodeMustBeString")
	}
	stringValue = strings.ToUpper(stringValue)

	countryCode = CountryCode(stringValue)
	if !slices.Contains(AvailableCountryCodes, countryCode) {
		return countryCode, errors.New("InvalidCountryCode")
	}

	return countryCode, nil
}

func (vo CountryCode) String() string {
	return string(vo)
}

func (vo CountryCode) ReadCountryName() (string, error) {
	availableCountryCodesWithNameMap := map[CountryCode]string{
		"AF": "Afghanistan",
		"AL": "Albania",
		"DZ": "Algeria",
		"AD": "Andorra",
		"AO": "Angola",
		"AG": "Antigua and Barbuda",
		"AR": "Argentina",
		"AM": "Armenia",
		"AU": "Australia",
		"AT": "Austria",
		"AZ": "Azerbaijan",
		"BS": "The Bahamas",
		"BH": "Bahrain",
		"BD": "Bangladesh",
		"BB": "Barbados",
		"BY": "Belarus",
		"BE": "Belgium",
		"BZ": "Belize",
		"BJ": "Benin",
		"BT": "Bhutan",
		"BO": "Bolivia",
		"BA": "Bosnia and Herzegovina",
		"BW": "Botswana",
		"BR": "Brazil",
		"BN": "Brunei",
		"BG": "Bulgaria",
		"BF": "Burkina Faso",
		"BI": "Burundi",
		"CV": "Cape Verde",
		"KH": "Cambodia",
		"CM": "Cameroon",
		"CA": "Canada",
		"TD": "Chad",
		"CL": "Chile",
		"CN": "China",
		"CO": "Colombia",
		"CR": "Costa Rica",
		"CI": "Ivory Coast",
		"HR": "Croatia",
		"CU": "Cuba",
		"CY": "Cyprus",
		"CZ": "Czech Republic",
		"CD": "Democratic Republic of the Congo",
		"DK": "Denmark",
		"DJ": "Djibouti",
		"DM": "Dominica",
		"DO": "Dominican Republic",
		"EC": "Ecuador",
		"EG": "Egypt",
		"SV": "El Salvador",
		"GQ": "Equatorial Guinea",
		"ER": "Eritrea",
		"EE": "Estonia",
		"SZ": "Swaziland",
		"ET": "Ethiopia",
		"FJ": "Fiji",
		"FI": "Finland",
		"FR": "France",
		"GA": "Gabon",
		"GM": "The Gambia",
		"GE": "Georgia",
		"DE": "Germany",
		"GH": "Ghana",
		"GR": "Greece",
		"GD": "Grenada",
		"GN": "Guinea",
		"GW": "Guinea-Bissau",
		"GY": "Guyana",
		"HT": "Haiti",
		"HN": "Honduras",
		"HU": "Hungary",
		"IS": "Iceland",
		"IN": "India",
		"ID": "Indonesia",
		"IR": "Iran",
		"IQ": "Iraq",
		"IE": "Ireland",
		"IL": "Israel",
		"IT": "Italy",
		"JM": "Jamaica",
		"JP": "Japan",
		"JO": "Jordan",
		"KZ": "Kazakhstan",
		"KE": "Kenya",
		"KP": "North Korea",
		"KR": "South Korea",
		"KW": "Kuwait",
		"KG": "Kyrgyzstan",
		"LA": "Laos",
		"LV": "Latvia",
		"LB": "Lebanon",
		"LS": "Lesotho",
		"LR": "Liberia",
		"LY": "Libya",
		"LI": "Liechtenstein",
		"LT": "Lithuania",
		"LU": "Luxembourg",
		"MG": "Madagascar",
		"MW": "Malawi",
		"MY": "Malaysia",
		"ML": "Mali",
		"MT": "Malta",
		"MR": "Mauritania",
		"MU": "Mauritius",
		"MX": "Mexico",
		"MD": "Moldova",
		"MC": "Monaco",
		"MN": "Mongolia",
		"ME": "Montenegro",
		"MA": "Morocco",
		"MZ": "Mozambique",
		"MM": "Myanmar",
		"NA": "Namibia",
		"NP": "Nepal",
		"NL": "Netherlands",
		"NZ": "New Zealand",
		"NI": "Nicaragua",
		"NE": "Niger",
		"NG": "Nigeria",
		"MK": "Republic of Macedonia",
		"NO": "Norway",
		"OM": "Oman",
		"PK": "Pakistan",
		"PA": "Panama",
		"PG": "Papua New Guinea",
		"PY": "Paraguay",
		"PE": "Peru",
		"PH": "Philippines",
		"PL": "Poland",
		"PT": "Portugal",
		"QA": "Qatar",
		"RO": "Romania",
		"RU": "Russia",
		"RW": "Rwanda",
		"KN": "Saint Kitts and Nevis",
		"VC": "Saint Vincent and the Grenadines",
		"WS": "Samoa",
		"SM": "San Marino",
		"ST": "São Tomé and Príncipe",
		"SA": "Saudi Arabia",
		"SN": "Senegal",
		"RS": "Serbia",
		"SC": "Seychelles",
		"SL": "Sierra Leone",
		"SG": "Singapore",
		"SK": "Slovakia",
		"SI": "Slovenia",
		"SB": "Solomon Islands",
		"SO": "Somalia",
		"ZA": "South Africa",
		"SS": "South Sudan",
		"ES": "Spain",
		"LK": "Sri Lanka",
		"SD": "Sudan",
		"SR": "Suriname",
		"SE": "Sweden",
		"CH": "Switzerland",
		"SY": "Syria",
		"TJ": "Tajikistan",
		"TZ": "Tanzania",
		"TH": "Thailand",
		"TL": "East Timor",
		"TG": "Togo",
		"TO": "Tonga",
		"TT": "Trinidad and Tobago",
		"TN": "Tunisia",
		"TR": "Turkey",
		"TM": "Turkmenistan",
		"UG": "Uganda",
		"UA": "Ukraine",
		"GB": "United Kingdom",
		"US": "United States",
		"UY": "Uruguay",
		"UZ": "Uzbekistan",
		"VU": "Vanuatu",
		"VA": "Vatican City",
		"VE": "Venezuela",
		"VN": "Vietnam",
		"YE": "Yemen",
		"ZM": "Zambia",
		"ZW": "Zimbabwe",
	}

	countryName, exists := availableCountryCodesWithNameMap[vo]
	if !exists {
		return countryName, errors.New("InvalidCountryCode")
	}

	return countryName, nil
}
